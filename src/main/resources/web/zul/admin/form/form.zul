<!--

    Seed
    Copyright (C) 2021 EUUâ›°ROCKS

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

-->
<!DOCTYPE xml>
<?component name="form-layout" macroURI="~./zul/admin/form/form_layout.zul" inline="true"?>
<?component name="form-fields" macroURI="~./zul/admin/form/form_fields.zul" inline="true"?>
<?component name="form-functions" macroURI="~./zul/admin/form/form_functions.zul" inline="true"?>
<?component name="form-transformers" macroURI="~./zul/admin/form/form_transformers.zul" inline="true"?>
<?component name="form-actions" macroURI="~./zul/admin/form/form_actions.zul" inline="true"?>
<?component name="form-printouts" macroURI="~./zul/admin/form/form_printouts.zul" inline="true"?>
<borderlayout viewModel="@id('vm') @init('org.seed.ui.zk.vm.admin.AdminFormViewModel')">
	<north border="0">
		<toolbar>
			<toolbarbutton iconSclass="back-button z-icon-arrow-left alpha-icon-lg" 
						   label="${labels.button.back}" 
						   onClick="@command('back')"/>
			<toolbarbutton iconSclass="save-button z-icon-save alpha-icon-lg" 
						   label="${labels.button.save}" 
						   onClick="@command('saveForm',elem=self)"
						   disabled="@load(!vm.isDirty())"/>
			<toolbarbutton iconSclass="refresh-button z-icon-refresh alpha-icon-lg" 
						   label="${labels.button.refresh}" 
						   onClick="@command('refreshForm',elem=self)"
						   visible="@load(not vm.object.isNew())"/>
			<toolbarbutton iconSclass="new-button z-icon-file-o" 
						   label="${labels.button.newobject}" 
						   onClick="@command('newForm')"/>
			<toolbarbutton iconSclass="delete-button z-icon-remove alpha-icon-lg" 
						   label="${labels.button.delete}" 
						   onClick="@command('deleteForm',elem=self)"
						   visible="@load(!vm.object.isNew())"/>
		</toolbar>
	</north>
	<center border="0">
		<vlayout hflex="1" vflex="1">
			<grid hflex="1" class="alpha-noborder">
				<columns>
	            	<column hflex="min"/>
	              	<column hflex="1"/>
	              	<column hflex="min"/>
	              	<column hflex="1"/>
	            </columns>
				<rows>
					<row>
						<cell style="padding: 4px 10px" align="right">
							<label value="${labels.label.name}:"/>
						</cell>
						<cell sclass="name-fieldcell"
							  style="padding: 4px 4px">
							<textbox value="@bind(vm.object.name) @converter(vm.stringConverter)"
									 placeholder="@load(vm.object.entity.name)"
									 onChange="@command('flagDirty')"
									 hflex="1"/>
						</cell>
						<cell style="padding: 4px 10px" align="right">
							<label value="${labels.label.auto}"
								   visible="@load(!vm.object.expertMode)"/>
						</cell>
						<cell style="padding: 4px 4px">
							<hlayout style="padding-top:4px"
									 visible="@load(!vm.object.expertMode)">
								<checkbox checked="@bind(vm.object.autoLayout)"
									  	  onCheck="@command('flagDirty')"/> 
								<space/>
								<combobox model="@load(vm.autoLayoutTypes)"
										  selectedItem="@bind(vm.object.autolayoutType)"
										  value="@load(vm.getEnumLabel(vm.object.autolayoutType))"
										  onSelect="@command('newAutoLayout')"
										  visible="@load(vm.object.autoLayout)"
										  placeholder="@init(vm.getEnumLabel(vm.defaultAutolayoutType))"
										  hflex="1">
					                <template name="model" var="autolayoutType">
					                    <comboitem label="@load(vm.getEnumLabel(autolayoutType))"/>
					                </template>
					            </combobox> 	
							</hlayout>	
						</cell>
					</row>
					<row>
						<cell style="padding: 4px 10px" align="right">
							<label value="${labels.label.entity}:"/>
						</cell>
						<cell style="padding: 4px 4px">
							<textbox value="@load(vm.object.entity.name)" hflex="1" 
									 cols="40" readonly="true"/>
						</cell>	
						<cell style="padding: 4px 10px" align="right">
							<label value="${labels.label.filter}:"
								   visible="@load(!vm.object.expertMode)"/>
						</cell>
						<cell sclass="filter-fieldcell"
							  style="padding: 4px 4px">
							<combobox model="@load(vm.filters) @template(empty each.name ? 'empty' : 'filter')"
									  selectedItem="@bind(vm.object.filter)"
									  value="@load(vm.object.filter.name)"
									  visible="@load(!vm.object.expertMode)"
									  onSelect="@command('flagDirty')"
									  hflex="1">
								<template name="empty">
				                    <comboitem/>
				                </template>
				                <template name="filter" var="filter">
				                    <comboitem label="@load(filter.name)"
				                    		   iconSclass="z-icon-filter z-icon-fw alpha-icon-lg"/>
				                </template>						
							</combobox>
						</cell>	
					</row>
				</rows>
			</grid>
			<tabbox id="mainTabbox" hflex="1" vflex="1" class="alpha-tabbox">
				<tabs>
					<tab label="${labels.label.layout}" sclass="layout-tab"/>
					<tab id="tabFields" sclass="fields-tab"
						 label="${labels.label.list}"/>
					<tab id="tabActions" sclass="actions-tab"
						 label="${labels.label.actions}"/>
					<tab id="tabFunctions" sclass="functions-tab"
						 label="${labels.label.functions}"
						 visible="@load(vm.object.expertMode)"/>
					<tab id="tabTransformers" sclass="transformers-tab"
						 label="${labels.label.transformers}"
						 visible="@load(vm.existTransformers())"/>
					<tab id="tabPrintouts" sclass="printouts-tab"
						 label="${labels.label.printouts}"/>
				</tabs>
				<tabpanels> 
					<tabpanel sclass="layout-tabpanel">
						<form-layout/>
					</tabpanel>
					<tabpanel sclass="fields-tabpanel" fulfill="tabFields.onSelect">
						<form-fields/>
					</tabpanel>
					<tabpanel sclass="actions-tabpanel" fulfill="tabActions.onSelect">
						<form-actions/>
					</tabpanel>
					<tabpanel sclass="functions-tabpanel" fulfill="tabFunctions.onSelect">
						<form-functions/>
					</tabpanel>
					<tabpanel sclass="transformers-tabpanel" fulfill="tabTransformers.onSelect">
						<form-transformers/>
					</tabpanel>
					<tabpanel sclass="printouts-tabpanel" fulfill="tabPrintouts.onSelect">
						<form-printouts/>
					</tabpanel>
				</tabpanels>
			</tabbox>
		</vlayout>
	</center>
	<south border="0">
		<systemfields object="@load(vm.object)"/>
	</south>
</borderlayout>