<!--

    Seed
    Copyright (C) 2021 EUUâ›°ROCKS

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

-->
<!DOCTYPE xml>
<borderlayout viewModel="@id('vm') @init('org.seed.ui.zk.vm.admin.AdminTaskViewModel')">
	<north border="0">
		<toolbar hflex="1">
			<toolbarbutton mode="toggle" 
						   iconSclass="filter-button z-icon-filter alpha-icon-lg" 
						   tooltiptext="${labels.label.togglefilter}"
						   checked="@bind(vm.listViewFilterGroup.visible)" 
						   visible="@load(vm.listViewFilterGroup.visible or vm.existObjects())"/>
			<toolbarbutton iconSclass="start-button z-icon-play alpha-icon-lg" 
						   label="${labels.button.start}" 
						   onClick="@command('startTask')"
						   visible="@load(!empty vm.object)"/>
			<toolbarbutton iconSclass="new-button z-icon-file-o alpha-icon-lg" 
						   label="${labels.admin.task.create}" 
						   onClick="@command('newTask')"/>
			<toolbarbutton iconSclass="refresh-button z-icon-refresh alpha-icon-lg" 
						   label="${labels.button.refresh}" 
						   onClick="@command('refreshTask')"/>
			<toolbarbutton iconSclass="edit-button z-icon-wrench alpha-icon-lg" 
						   label="${labels.admin.task.edit}" 
						   onClick="@command('editTask')"
						   visible="@load(!empty vm.object)"/>
			<toolbarbutton iconSclass="delete-button z-icon-remove alpha-icon-lg" 
						   label="${labels.admin.task.delete}" 
						   onClick="@command('deleteTask', elem=self)"
						   visible="@load(!empty vm.object)"/>
		</toolbar>
	</north>
	<center border="0">
		<listbox style="margin:5px" mold="paging" autopaging="true" vflex="true"
				 model="@load(vm.objectList)" 
		         selectedItem="@bind(vm.object)" 
		         visible="@load(vm.existObjects())">
			<listhead sizable="true">
	            <listheader hflex="2" label="${labels.label.job}" 
	            			sort="auto(name)" onCreate="self.sort(true)"/>
	            <listheader hflex="min" label="${labels.label.active}"
	            			sort="auto(active)"/>
	            <listheader hflex="min" label="${labels.label.runs}"/> 			
	            <listheader label="${labels.label.resultshort}" 
	            			sort="auto(lastResult)" hflex="min"/>
	            <listheader hflex="1" label="${labels.label.module}"
	            			sort="auto(module.name)"
	            			visible="@load(vm.existModules())"/>
	        </listhead>
	        <auxhead visible="@load(vm.listViewFilterGroup.visible)">
		    	<auxheader>
		            <textbox value="@bind(vm.getFilter('list','name').value)" 
		            		 hflex="1"/>
		        </auxheader>
		        <auxheader>
		        	<checkbox checked="@bind(vm.getFilter('list','active').booleanValue)"/>
		        </auxheader>
		        <auxheader/>
		        <auxheader/>
		        <auxheader>
		        	<combobox model="@load(vm.getFilter('list','module').values) @template(empty each ? 'empty' : 'module')"
		            		  selectedItem="@bind(vm.getFilter('list','module').value)"
		            		  hflex="1">
		                <template name="empty">
		                    <comboitem/>
		                </template>
		           		<template name="module" var="modulename">
		                    <comboitem label="@load(modulename)" 
		                    		   iconSclass="z-icon-cube alpha-icon-lg"/>
		                </template>
		           	</combobox>
		        </auxheader>
		    </auxhead>
	        <template name="model" var="task">
	            <listitem onDoubleClick="@command('editTask')">
	            	<listcell sclass="@init(vm.getListItemTestClass(task))" 
	            			  iconSclass="z-icon-cog z-icon-fw alpha-icon-lg">
	            		<label value="@init(task.name)" style="margin-left:3px"/>
	            	</listcell>
	            	<listcell>
	            		<checkbox checked="@load(task.active)"
	            				  disabled="true"/>
	            	</listcell>
	            	<listcell>
	            		<checkbox checked="@load(vm.isRunning(task))"
	            				  disabled="true"/>
	            	</listcell>
	            	<listcell>
	            		<taskstatus result="@load(task.lastResult)"/>
	            	</listcell>
	            	<listcell iconSclass="@load(empty task.module ? '' : 'z-icon-cube alpha-icon-lg')">
	            		<label value="@init(task.module.name)" style="margin-left:3px"/>
	            	</listcell>
	            </listitem>
	        </template>   
		</listbox>
	</center>
	<south>
		<timer delay="5000" repeats="true"
		       onTimer="@command('checkJobStatus')"/>
	</south>
</borderlayout>
