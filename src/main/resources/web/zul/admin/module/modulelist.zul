<!--

    Seed
    Copyright (C) 2021 EUUâ›°ROCKS

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

-->
<!DOCTYPE xml>
<borderlayout viewModel="@id('vm') @init('org.seed.ui.zk.vm.admin.AdminModuleViewModel')">
	<north border="0">
		<toolbar hflex="1">
			<toolbarbutton mode="toggle" 
						   iconSclass="filter-button z-icon-filter alpha-icon-lg" 
						   tooltiptext="${labels.label.togglefilter}"
						   checked="@bind(vm.listViewFilterGroup.visible)" 
						   visible="@load(vm.listViewFilterGroup.visible or vm.existObjects())"/>
			<toolbarbutton iconSclass="new-button z-icon-file-o alpha-icon-lg" 
						   label="${labels.admin.module.create}" 
						   onClick="@command('newModule')"/>
			<toolbarbutton iconSclass="refresh-button z-icon-refresh alpha-icon-lg" 
						   label="${labels.button.refresh}" 
						   onClick="@command('refreshModule')"/>			   
			<toolbarbutton iconSclass="edit-button z-icon-wrench alpha-icon-lg" 
						   label="${labels.admin.module.edit}" 
						   onClick="@command('editModule')"
						   visible="@load(!empty vm.object)"/>
			<toolbarbutton iconSclass="remove-button z-icon-remove alpha-icon-lg" 
						   label="${labels.admin.module.delete}" 
						   onClick="@command('deleteModule', elem=self)"
						   visible="@load(!empty vm.object)"/>
			<toolbarbutton iconSclass="import-button z-icon-upload alpha-icon-lg" 
						   label="${labels.button.importing}"
						   upload="true"
						   onUpload="@command('analyzeModule', elem=self, upload=event)"/>			   
			<toolbarbutton iconSclass="export-button z-icon-download alpha-icon-lg" 
						   label="${labels.button.export}" 
						   onClick="@command('exportModule', elem=self)"
						   visible="@load(!empty vm.object)"/>
			<toolbarbutton iconSclass="importdir-button z-icon-sign-in alpha-icon-lg" 
						   label="${labels.button.importfromdir}"
						   visible="@init(vm.externalDirEnabled)"
						   onClick="@command('analyzeModuleFromDir', elem=self)"/>
			<toolbarbutton iconSclass="exportdir-button z-icon-sign-out alpha-icon-lg" 
						   label="${labels.button.exporttodir}" 
						   onClick="@command('exportModuleToDir', elem=self)"
						   visible="@load(vm.externalDirEnabled and !empty vm.object)"/>
		</toolbar>
	</north>
	<center border="0">
		<listbox model="@load(vm.objectList)" 
		         selectedItem="@bind(vm.object)" 
		         visible="@load(vm.existObjects())"
		         style="margin:5px" vflex="true">
			<listhead sizable="true">
	            <listheader hflex="1" label="${labels.label.module}" 
	            			sort="auto(name)" onCreate="self.sort(true)"/>
	        </listhead> 
		    <auxhead visible="@load(vm.listViewFilterGroup.visible)">
		    	<auxheader>
		            <textbox value="@bind(vm.getFilter('list','name').value)" 
		            		 hflex="1"/>
		        </auxheader>
		    </auxhead>
		    <template name="model" var="module">
	            <listitem sclass="@init(vm.getListItemTestClass(module))" 
	            		  onDoubleClick="@command('editModule')">
	            	<listcell iconSclass="z-icon-cube z-icon-fw alpha-icon-lg">
	            		<label value="@init(module.name)" style="margin-left:3px"/>
	            	</listcell>
	            </listitem>
		    </template>        
		</listbox>
	</center>
</borderlayout>