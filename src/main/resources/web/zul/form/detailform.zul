<!--

    Seed
    Copyright (C) 2021 EUUâ›°ROCKS

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

-->
<!DOCTYPE xml>
<borderlayout viewModel="@id('vm') @init('org.seed.ui.zk.vm.DetailFormViewModel')">
	<north border="0">
		<toolbar children="@init(vm.detailActions)
						   @template(empty each.type.detailTemplate ? 'default' : each.type.detailTemplate)" 
				 vflex="1">
			<template name="default" var="action">
				<toolbarbutton label="@init(vm.getActionLabel(action))"
							   enable="@init(vm.isActionEnabled(action))"
							   sclass="@init(action.testClass)"
						   	   onClick="@command('callAction',action=action,elem=self)"
						   	   iconSclass="@init(action.type.icon.concat(' z-icon-fw alpha-icon-lg'))"
						   	   disabled="@load(vm.isActionDisabled(action))"/>
			</template>
			<template name="dirty" var="action">
				<toolbarbutton label="@init(vm.getActionLabel(action))"
							   enable="@init(vm.isActionEnabled(action))"
							   sclass="@init(action.testClass)"
						   	   onClick="@command('callAction',action=action,elem=self)"
						   	   iconSclass="@init(action.type.icon.concat(' z-icon-fw alpha-icon-lg'))"
						   	   disabled="@load(!vm.isDirty() or vm.isActionDisabled(action))"/>
			</template>
			<template name="notnew" var="action">
				<toolbarbutton label="@init(vm.getActionLabel(action))"
							   enable="@init(vm.isActionEnabled(action))"
							   sclass="@init(action.testClass)"
						   	   onClick="@command('callAction',action=action,elem=self)"
						   	   iconSclass="@init(action.type.icon.concat(' z-icon-fw alpha-icon-lg'))"
						   	   disabled="@load(vm.isActionDisabled(action))"
						   	   visible="@load(!vm.object.isNew())"/>
			</template>
			<template name="print" var="action">
				<toolbarbutton label="@init(vm.getActionLabel(action))"
							   enable="@init(vm.isActionEnabled(action))"
							   sclass="@init(action.testClass)"
						   	   onClick="@command('callAction',action=action,elem=self)"
						   	   iconSclass="@init(action.type.icon.concat(' z-icon-fw alpha-icon-lg'))"
						   	   disabled="@load(vm.isActionDisabled(action))"
						   	   visible="@load(vm.form.hasPrintouts())"/>
			</template>
			<template name="status" var="action">
				<combobox model="@load(vm.availableStatusList)"
						  selectedItem="@bind(vm.status)"
						  onSelect="@command('changeStatus',action=action,elem=self)"
						  value="@load(vm.status.numberAndName)"
						  disabled="@load(vm.isDirty() or vm.isActionDisabled(action))"
						  sclass="status-toolbarcombo"
						  style="padding-left:10px"
						  nullable="false" readonly="true">
					<template name="model" var="status">
	                    <comboitem label="@init(status.numberAndName)"/>
	                </template>
				</combobox>
			</template>
			<template name="transform" var="action">
				<combobox visible="@load(!vm.object.isNew() and !empty vm.transformers)"
						  model="@load(vm.transformers)"
						  selectedItem="@bind(vm.transformer)"
						  onSelect="@command('callAction',action=action,elem=self)"
						  value="@load(vm.transformer.name)"
						  disabled="@load(vm.isDirty() or vm.isActionDisabled(action))"
						  sclass="transformer-toolbarcombo"
						  style="padding-left:10px"
						  placeholder="${labels.label.transformobject}"
						  nullable="false" readonly="true">
					<template name="model" var="transformer">
	                    <comboitem label="@init(transformer.name)"/>
	                </template>
				</combobox>
			</template>
		</toolbar>
	</north>
	<center border="0"
			autoscroll="true">
		<include id="incLayout"
				 src="@load(vm.layoutInclude)"/>
	</center>
	<east title="${labels.label.versions}" 
		  visible="@load(vm.audited)"
		  width="250px" border="0" collapsible="true" splittable="true"
		  open="false" autoscroll="true" class="alpha-properties">
		<listbox model="@load(vm.revisions)" 
		         selectedItem="@bind(vm.revision)"
		         onSelect="@command('selectRevision')"
		         vflex="true" hflex="true">
			<listhead sizable="true">
	        	<listheader hflex="2" label="${labels.label.timestamp}" 
	            			sort="auto(revisionDate)" onCreate="self.sort(true)"/> 		
	            <listheader hflex="1" label="${labels.label.author}" 
	            			sort="auto(author)"/>
		 	</listhead>
		 	<template name="model" var="revision">
            	<listitem>
            		<listcell>
	            		<label value="@load(revision.revisionDate)
	            					  @converter(vm.dateTimeConverter)" style="margin-left:3px"/>
	            	</listcell>
	            	<listcell>
	            		<label value="@load(revision.author)" style="margin-left:3px"/>
	            	</listcell>
            	</listitem>
            </template>       
		</listbox>
	</east>
	<south border="0">
		<div>
			<systemfields object="@load(vm.object)" visible="@load(empty vm.revision)"/>
			<revisioninfo revision="@load(vm.revision)" visible="@load(!empty vm.revision)"/>
		</div>
	</south>
</borderlayout>